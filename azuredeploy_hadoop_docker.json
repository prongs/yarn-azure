{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "String",
            "metadata": {
                "description": "VM name to create."
            }
        },
        "adminUsername": {
            "type": "String",
            "defaultValue": "platform",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sshUserName": {
            "type": "String",
            "defaultValue": "platform",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "ubuntuOSVersion": {
            "defaultValue": "16.04.0-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.5-LTS",
                "15.10",
                "16.04.0-LTS"
            ],
            "type": "String",
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "virtualNetworkName": {
            "type": "String",
            "metadata": {
                "description": "Name of the virtual network to use"
            }
        },
        "subnetName": {
            "type": "String",
            "metadata": {
                "description": "Subnet name."
            }
        },
        "publicIPAddressType": {
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "type": "String",
            "metadata": {
                "description": "Type of public IP address"
            }
        },
        "azureFsProtocol": {
            "type": "String",
            "defaultValue": "wasb",
            "metadata": {
                "description": "The Azure FS protocol: wasb/wasbs."
            }
        },
        "azureBlobEndpoint": {
            "type": "String",
            "metadata": {
                "description": "The Azure blob endpoint."
            }
        },
        "azureFsKey": {
            "type": "String",
            "metadata": {
                "description": "The key of the default storage account."
            }
        },
        "azureBlobContainer": {
            "type": "String",
            "metadata": {
                "description": "The name of the existing Azure blob storage container."
            }
        },
        "dockerRegistryUrl": {
            "type": "String",
            "metadata": {
                "description": "If deploying via docker, The registry url."
            }
        },
        "dockerRegistryUsername": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "If deploying via docker, Username to connect to docker registry."
            }
        },
        "dockerRegistryPassword": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "If deploying via docker, Password to connect to docker registry."
            }
        },
        "dockerImagesToRun": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Space separated docker images to run on this VM"
            }
        },
        "dockerEnvironment": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "space separated environment `key=value` list for docker images to have as environment variables."
            }
        },
        "vmSku": {
            "defaultValue": "Standard_A1",
            "type": "String",
            "metadata": {
                "description": "SKU of machine."
            }
        },
        "graphiteHost": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Graphite endpoint host name (optional)"
            }
        },
        "graphitePort": {
            "defaultValue": 2003,
            "type": "Int",
            "metadata": {
                "description": "Graphite endpoint port (optional)"
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "subnetName": "[parameters('subnetName')]",
        "vmSize": "[parameters('vmSku')]",
        "vmName": "[parameters('vmName')]",
        "nicName": "[concat(variables('vmName'),'-nic')]",
        "ipConfigName": "[concat(variables('vmName'), '-ipconfig')]",
        "publicIPAddressName": "[concat(parameters('clusterName'),'-pip')]",
        "virtualNetworkName": "[parameters('virtualNetworkName')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "storageAccountType": "Standard_LRS",
        "osType": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
        },
        "imageReference": "[variables('osType')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('vmName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('ipConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId ('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('azureBlobEndpoint')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, 'vhds/', 'osdisk', parameters('vmName'), '.vhd')]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), '/', 'install-and-start-script')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "http://raw.githubusercontent.com/prongs/yarn-azure/develop/bootstrap.sh"
                    ],
                    "commandToExecute": "[concat('bash bootstrap.sh ', parameters('dockerImagesToRun'), 'AZURE_BLOB_CONTAINER=', parameters('azureBlobContainer'), ' AZURE_BLOB_ENDPOINT=', parameters('azureBlobEndpoint'), ' AZURE_FS_PROTOCOL=', parameters('azureFsProtocol'), ' AZURE_FS_KEY=', parameters('azureFsKey'), ' GRAPHITE_HOST=', parameters('graphiteHost'), ' GRAPHITE_PORT=', parameters('graphitePort'), ' DOCKER_REGISTRY_URL=', parameters('dockerRegistryUrl'), ' DOCKER_REGISTRY_USERNAME=', parameters('dockerRegistryUsername'), ' DOCKER_REGISTRY_PASSWORD=', parameters('dockerRegistryPassword'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ]
        }
    ],
    "outputs": {
        "resourceId": {
            "type": "String",
            "value": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
        },
        "fqdn": {
            "type": "String",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]"
        }
    }
}